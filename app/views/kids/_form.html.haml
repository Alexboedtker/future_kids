= render :partial => 'subnav'

= semantic_form_for resource, :html => { :id => 'content_form' } do |form|
  %h2#kid= resource.display_name

  = form.semantic_errors
  = form.inputs do
    = form.input :name
    = form.input :prename
    = form.input :parent
    = form.input :address, :as => :text
    = form.input :sex, :as => :select, :collection => { "MÃ¤dchen" => 'f', "Knabe" => 'm' }
    = form.input :entered_at, :as => :date

  %h2#school Allgemeine Informationen
  = form.inputs do
    = form.input :goal, :as => :text
    = form.input :grade
    -# mongoid relations are not yet supported, we have to build the selection
    -# manually
    %li#kid_teacher_id_input.select.optional
      %label Lehrer
      = can_select(form, 'teacher_id', Teacher)
    %li#kid_mentor_id_input.select.optional
      %label Mentor
      = can_select(form, 'mentor_id', Mentor)
    %li#kid_secondary_mentor_id_input.select.optional
      %label Zweiter Mentor
      = can_select(form, 'secondary_mentor_id', Mentor)

  %h2#journals= Journal.model_name.human

  = form.semantic_fields_for :journals, resource.journals_sorted do |nested_form|
    %h3{:id => dom_id(nested_form.object)}= nested_form.object.display_name
    = form.inputs do
      = nested_form.input :held_at, :as => :date
      = nested_form.input :goal
      = nested_form.input :subject, :as => :text
      = nested_form.input :method
      = nested_form.input :outcome, :as => :text

  %h2#reviews= Review.model_name.human

  = form.semantic_fields_for :reviews, resource.reviews_sorted do |nested_form|
    %h3{:id => dom_id(nested_form.object)}= nested_form.object.display_name
    = form.inputs do
      = nested_form.input :held_at, :as => :date
      = nested_form.input :reason
      = nested_form.input :kind
      = nested_form.input :content, :as => :text
      = nested_form.input :outcome, :as => :text
      = nested_form.input :note, :as => :text


  = form.buttons 
